// pipeline {
//     agent any

//     stages {
//         stage('Build Docker Image') {
//             steps {
//                 script {
//                     sh 'docker build -t <acr-name>.azurecr.io/hello-world:v1 .'
//                 }
//             }
//         }
//         stage('Push to ACR') {
//             steps {
//                 script {
//                     sh 'docker push <acr-name>.azurecr.io/hello-world:v1'
//                 }
//             }
//         }
//         stage('Deploy to AKS') {
//             steps {
//                 script {
//                     sh 'kubectl apply -f k8s/deployment.yaml'
//                     sh 'kubectl apply -f k8s/service.yaml'
//                     sh 'kubectl apply -f k8s/ingress.yaml'
//                 }
//             }
//         }
//     }
// }
pipeline {
    agent any

    environment {
        ACR_NAME = "<acr-name>.azurecr.io"
        IMAGE_NAME = "hello-world"
        IMAGE_TAG = "v1"
        HPA_SCRIPT_PATH = "terraform/scripts"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${ACR_NAME}/${IMAGE_NAME}:${IMAGE_TAG} ."
                }
            }
        }
        stage('Push to ACR') {
            steps {
                script {
                    sh "docker push ${ACR_NAME}/${IMAGE_NAME}:${IMAGE_TAG}"
                }
            }
        }
        stage('Deploy to AKS') {
            steps {
                script {
                    sh 'kubectl apply -f k8s/deployment.yaml'
                    sh 'kubectl apply -f k8s/service.yaml'
                    sh 'kubectl apply -f k8s/ingress.yaml'
                }
            }
        }
        stage('Apply HPA') {
            steps {
                script {
                    sh 'kubectl apply -f k8s/hpa.yaml'
                }
            }
        }
        stage('Monitor HPA') {
            steps {
                script {
                    sh """
                    chmod +x ${HPA_SCRIPT_PATH}/monitor-hpa.sh
                    ${HPA_SCRIPT_PATH}/monitor-hpa.sh &
                    """
                }
            }
        }
        stage('Benchmark Application') {
            steps {
                script {
                    sh """
                    chmod +x ${HPA_SCRIPT_PATH}/benchmark-hpa.sh
                    ${HPA_SCRIPT_PATH}/benchmark-hpa.sh
                    """
                }
            }
        }
    }

    post {
        always {
            script {
                echo "Cleaning up background processes (if any)."
                sh 'pkill -f monitor-hpa.sh || true'
            }
        }
    }
}
